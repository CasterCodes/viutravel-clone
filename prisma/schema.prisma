datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Profile {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  displayName String?
  firstName String?
  lastName String?
  address String?
  zipCode String?
  city String?
  state String?
  country String?
  title String?
  dob DateTime?
  phoneNumber String?
  travelRating String?
  userId String @unique @db.ObjectId
  user    User @relation(fields: [userId], references: [id])
 
}


model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  username  String  
  email     String   @unique
  password  String
  phone String @unique
  profile Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}




model Offer {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  discount    Float
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  offerId         String?  @unique @db.ObjectId
  
  // Define foreign key
  offer           Accommodation?         @relation(fields: [offerId], references: [id])
}


// Define the Destination model
model Destination {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String 
  description String
  location    String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  accommodation Accommodation[]
}


model Room {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  pricePerNight   Float
  roomType  String
  numberOfGuests Int
  capacity        Int
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  accommodationId String @db.ObjectId
  accommodation   Accommodation  @relation(fields: [accommodationId], references: [id])
}


model Accommodation {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  description     String
  address         String
  amenities       String[]
  propertyType    String  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  imageUrls String[]
  rooms Room[]
  destinationId   String @db.ObjectId
  offer Offer?
  destination     Destination @relation(fields: [destinationId], references: [id])
  
}


